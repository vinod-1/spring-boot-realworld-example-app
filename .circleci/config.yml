version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk

    working_directory: ~/repo

    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      #- run: gradle dependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}
       # run tests!
      #- run: gradle test - enable when tests needs to be done

         
  Build_and_push_Jar:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk
#      - image: circleci/golang:1.13.6-buster
    working_directory: ~/project
    steps:
      - checkout
      - run: sudo apt-get -y -qq update
      - run: export TERM=xterm && ./gradlew bootJar
      - run: ls build/libs/
      - run: sudo apt-get -y -qq update
      - run: sudo apt-get -y install curl
      - run: curl -0 https://dl.google.com/go/go1.13.8.linux-amd64.tar.gz --output go1.13.8.linux-amd64.tar.gz
      - run: tar -xvf go1.13.8.linux-amd64.tar.gz
      - run: sudo mv go /usr/local
      - run:
          name: Set env Vars
          command: |
            echo 'export export GOPATH="$HOME/go"' >> $BASH_ENV
            echo 'export PATH="$PATH:/usr/local/go/bin:$GOPATH/bin"' >> $BASH_ENV
            source $BASH_ENV
    
      - run: go get -u github.com/tcnksm/ghr
      - run: go get -u github.com/stevenmatthewt/semantics
      - run:
          name: create release
          command: |
            tag=$(semantics --output-tag)
            if [ "$tag" ]; then
              ghr -t $GITHUB_TOKEN -u $CIRCLE_PROJECT_USERNAME -r $CIRCLE_PROJECT_REPONAME --replace $tag dist/
            else
              echo "The commit message(s) did not indicate a major/minor/patch version."
            fi
      
#      - run: CIRCLE_BUILD_NUM
#      - run: ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${CIRCLE_BUILD_NUM} ~/project/build/libs

#      - run: scp -r -o StrictHostKeyChecking=no build/ user@server:/home/user
            
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
#      - Approve:
#          requires:
#            - build
#          type: approval
      - Build_and_push_Jar
#          requires:
#            - Approve
          #type: approval
#          filters:
#            branches:
#              only: master
